namespace CircleDI.MinimalAPI.Defenitions;

public static partial class Attributes {
    public const string EndpointAttribute = $$"""
        // <auto-generated/>
        #pragma warning disable
        #nullable enable annotations


        #if !CIRCLEDI_EXCLUDE_ATTRIBUTES

        using System;

        namespace CircleDIAttributes;

        /// <summary>
        /// <para>Adds a <see cref="Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that matches HTTP requests for the specified pattern with the specified HTTP method.</para>
        /// <para>The method must be static and non-generic. Dependencies must be explicitly marked with <see cref="CircleDIAttributes.DependencyAttribute">[Dependency]</see>.</para>
        /// </summary>
        /// <param name="pattern">The pattern for the route or url</param>
        /// <param name="httpMethod">The HTTP method for this endpoint</param>
        [AttributeUsage(AttributeTargets.Method)]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("{{NAME}}", "{{VERSION}}")]
        internal sealed class EndpointAttribute(string pattern, Http httpMethod) : Attribute {
            /// <summary>
            /// <para>The name of a method that takes <see cref="Microsoft.AspNetCore.Builder.RouteHandlerBuilder"/> to configure the endpoint.</para>
            /// <para>The method must be in the same class.</para>
            /// </summary>
            public string RouteBuilder { get; init; }
        }

        #endif

        """;
}
